<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        f1mjsGWG6Wp/AAAAAElFTkSuQmCC
</value>
  </data>
</root>